package common

import (
	"reflect"
	"testing"
)

func TestNewException(t *testing.T) {
	type args struct {
		errorCode Error
	}
	tests := []struct {
		name string
		args args
		want Exception
	}{
		{"base", args{UserAborted}, Exception{UserAborted}},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := NewException(tt.args.errorCode); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("NewException() = %v, want %v", got, tt.want)
			}
		})
	}
}

func TestException_GetErrorCode(t *testing.T) {
	tests := []struct {
		name string
		e    Exception
		want Error
	}{
		{"UserAborted", Exception{UserAborted}, UserAborted},
		{"ErrorNotImplemented", Exception{ErrorNotImplemented}, ErrorNotImplemented},
		{"Success", Exception{}, Success},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := tt.e.GetErrorCode(); !reflect.DeepEqual(got, tt.want) {
				t.Errorf("Exception.GetErrorCode() = %v, want %v", got, tt.want)
			}
		})
	}
}

func TestException_What(t *testing.T) {
	tests := []struct {
		name string
		e    Exception
		want string
	}{
		{"ErrorNotImplemented", Exception{ErrorNotImplemented}, "The called function is not fully implemented"},
		{"ErrorInvalidParam", Exception{ErrorInvalidParam}, "The call parameter to the function was invalid"},
		{"ErrorCalculationTerminated", Exception{ErrorCalculationTerminated}, "The Calculation has to be canceled"},
		{"ErrorCouldNotLoadLibrary", Exception{ErrorCouldNotLoadLibrary}, "The DLL Library of the DLL Filters could not be loaded"},
		{"ErrorGetProcFailed", Exception{ErrorGetProcFailed}, "The DLL Library of the DLL Filters is invalid"},
		{"ErrorDLLNotLoaded", Exception{ErrorDLLNotLoaded}, "The DLL Library has not been loaded or could not be loaded"},
		{"ErrorDLLFunctionNotFound", Exception{ErrorDLLFunctionNotFound}, "The DLL Library of the DLL Filters is invalid"},
		{"ErrorDLLInvalidParam", Exception{ErrorDLLInvalidParam}, "The DLL Library has got an invalid parameter"},
		{"ErrorDLLNoInstance", Exception{ErrorDLLNoInstance}, "No Instance of the DLL has been created"},
		{"ErrorDLLInvalidFilterName", Exception{ErrorDLLInvalidFilterName}, "The DLL does not support the suspected filters"},
		{"ErrorDLLMissingParameter", Exception{ErrorDLLMissingParameter}, "Not all parameters are provided to the DLL"},
		{"ErrorInvalidBlockSize", Exception{ErrorInvalidBlockSize}, "The provided Blocksize is invalid (like in CPagedVector)"},
		{"ErrorInvalidIndex", Exception{ErrorInvalidIndex}, "The provided Index is invalid (like in CPagedVector, Node Index)"},
		{"ErrorSingularMatrix", Exception{ErrorSingularMatrix}, "A Matrix could not be inverted in the Matrix functions (as it is singular)"},
		{"ErrorModelMismatch", Exception{ErrorModelMismatch}, "The Model Object does not match the model which is it added to"},
		{"ErrorAbstract", Exception{ErrorAbstract}, "The function called is abstract and should not have been called"},
		{"ErrorInvalidHeadBlock", Exception{ErrorInvalidHeadBlock}, "The current block is not assigned"},
		{"ErrorCOMInitializationFailed", Exception{ErrorCOMInitializationFailed}, "COM CoInitialize failed"},
		{"ErrorStandardCPPException", Exception{ErrorStandardCPPException}, "A Standard C++ Exception occured"},
		{"ErrorInvalidMesh", Exception{ErrorInvalidMesh}, "No mesh has been given"},
		{"ErrorCouldNotCreateContext", Exception{ErrorCouldNotCreateContext}, "Context could not be created"},
		{"ErrorEmptyStringToIntConversion", Exception{ErrorEmptyStringToIntConversion}, "Wanted to convert empty string to integer"},
		{"ErrorInvalidStringToIntConversion", Exception{ErrorInvalidStringToIntConversion}, "Wanted to convert string with non-numeric characters to integer"},
		{"ErrorStringToIntConversionOutOfRange", Exception{ErrorStringToIntConversionOutOfRange}, "Wanted to convert too large number string to integer"},
		{"ErrorEmptyStringToDoubleConversion", Exception{ErrorEmptyStringToDoubleConversion}, "Wanted to convert empty string to double"},
		{"ErrorInvalidStringToDoubleConversion", Exception{ErrorInvalidStringToDoubleConversion}, "Wanted to convert string with non-numeric characters to double"},
		{"ErrorStringToDoubleConversionOutOfRange", Exception{ErrorStringToDoubleConversionOutOfRange}, "Wanted to convert too large number string to double"},
		{"ErrorTooManyValuesInMatrixString", Exception{ErrorTooManyValuesInMatrixString}, "Too many values (>12) have been found in a matrix string"},
		{"ErrorNotEnoughValuesInMatrixString", Exception{ErrorNotEnoughValuesInMatrixString}, "Not enough values (<12) have been found in a matrix string"},
		{"ErrorInvalidBufferSize", Exception{ErrorInvalidBufferSize}, "Invalid buffer size"},
		{"ErrorInsufficientBufferSize", Exception{ErrorInsufficientBufferSize}, "Insufficient buffer size"},
		{"ErrorInvalidComponent", Exception{ErrorInvalidComponent}, "No component has been given"},
		{"ErrorInvalidHEXValue", Exception{ErrorInvalidHEXValue}, "Invalid hex value"},
		{"ErrorRangeError", Exception{ErrorRangeError}, "Range error"},
		{"ErrorInvalidPointer", Exception{ErrorInvalidPointer}, "Passed invalid null pointer"},
		{"ErrorXMLElementNotOpen", Exception{ErrorXMLElementNotOpen}, "XML Element not open"},
		{"ErrorInvalidXMLName", Exception{ErrorInvalidXMLName}, "Invalid XML Name"},
		{"ErrorInvalidIntegerTriplet", Exception{ErrorInvalidIntegerTriplet}, "Invalid Integer Triplet String"},
		{"ErrorInvalidZIPEntryKey", Exception{ErrorInvalidZIPEntryKey}, "Invalid ZIP Entry key"},
		{"ErrorInvalidZIPName", Exception{ErrorInvalidZIPName}, "Invalid ZIP Name"},
		{"ErrorZIPStreamCanNotSeek", Exception{ErrorZIPStreamCanNotSeek}, "ZIP Stream cannot seek"},
		{"ErrorCouldNotConvertToUTF8", Exception{ErrorCouldNotConvertToUTF8}, "Could not convert to UTF8"},
		{"ErrorCouldNotConvertToUTF16", Exception{ErrorCouldNotConvertToUTF16}, "Could not convert to UTF16"},
		{"ErrorZIPEntryOverflow", Exception{ErrorZIPEntryOverflow}, "ZIP Entry overflow"},
		{"ErrorInvalidZIPEntry", Exception{ErrorInvalidZIPEntry}, "Invalid ZIP Entry"},
		{"ErrorExportStreamNotEmpty", Exception{ErrorExportStreamNotEmpty}, "Export Stream not empty"},
		{"ErrorDeflateInitFailed", Exception{ErrorDeflateInitFailed}, "Deflate init failed"},
		{"ErrorZIPAlreadyFinished", Exception{ErrorZIPAlreadyFinished}, "Zip already finished"},
		{"ErrorCouldNotDeflate", Exception{ErrorCouldNotDeflate}, "Could not deflate data"},
		{"ErrorXMLWriterCloseNodeError", Exception{ErrorXMLWriterCloseNodeError}, "Could not close written XML node"},
		{"ErrorInvalidOPCPartURI", Exception{ErrorInvalidOPCPartURI}, "Invalid OPC Part URI"},
		{"ErrorCouldNotConvertNumber", Exception{ErrorCouldNotConvertNumber}, "Could not convert number"},
		{"ErrorCouldNotGetStreamPosition", Exception{ErrorCouldNotGetStreamPosition}, "Could not get stream position"},
		{"ErrorCouldNotReadZIPFile", Exception{ErrorCouldNotReadZIPFile}, "Could not read ZIP file"},
		{"ErrorCouldNotSeekInZIP", Exception{ErrorCouldNotSeekInZIP}, "Could not seek in ZIP file"},
		{"ErrorCouldNotStatZIPEntry", Exception{ErrorCouldNotStatZIPEntry}, "Could not stat ZIP entry"},
		{"ErrorCouldNotOpenZIPEntry", Exception{ErrorCouldNotOpenZIPEntry}, "Could not open ZIP entry"},
		{"ErrorInvalidXMLDepth", Exception{ErrorInvalidXMLDepth}, "Invalid XML Depth"},
		{"ErrorXMLElementNotEmpty", Exception{ErrorXMLElementNotEmpty}, "XML Element not empty"},
		{"ErrorCouldNotInitializeCOM", Exception{ErrorCouldNotInitializeCOM}, "Could not initialize COM"},
		{"ErrorCallbackStreamCanNotSeek", Exception{ErrorCallbackStreamCanNotSeek}, "Callback stream cannot seek"},
		{"ErrorCouldNotWriteToCallbackStream", Exception{ErrorCouldNotWriteToCallbackStream}, "Could not write to callback stream"},
		{"ErrorInvalidCast", Exception{ErrorInvalidCast}, "Invalid Type Case"},
		{"ErrorBufferIsFull", Exception{ErrorBufferIsFull}, "Buffer is full"},
		{"ErrorCouldNotReadFROMCallbackStream", Exception{ErrorCouldNotReadFROMCallbackStream}, "Could not read from callback stream"},
		{"ErrorOPCMissingExtensionForRelationship", Exception{ErrorOPCMissingExtensionForRelationship}, "Content Types does not contain extension for relatioship."},
		{"ErrorOPCMissingExtensionForModel", Exception{ErrorOPCMissingExtensionForModel}, "Content Types does not contain extension or partname for model."},
		{"ErrorInvalidXMLEncoding", Exception{ErrorInvalidXMLEncoding}, "Document is not UTF-8 encoded."},
		{"ErrorForbiddenXMLAttribute", Exception{ErrorForbiddenXMLAttribute}, "Document contains a forbidden XML-attribute."},
		{"ErrorDuplicatePrintTICKET", Exception{ErrorDuplicatePrintTICKET}, "Document contains more than one printticket."},
		{"ErrorOPCDuplicateRelationshipID", Exception{ErrorOPCDuplicateRelationshipID}, "Document contains a duplicate relationship ID."},
		{"ErrorInvalidRelationshipTypeForTexture", Exception{ErrorInvalidRelationshipTypeForTexture}, "A texture must use a OPC part with relationshiptype 3D Texture."},
		{"ErrorImportStreamIsEmpty", Exception{ErrorImportStreamIsEmpty}, "An attachment to be read does not have any content."},
		{"ErrorUUIDGenerationFailed", Exception{ErrorUUIDGenerationFailed}, "Generation of a UUID failed."},
		{"ErrorZIPEntryNon64TooLarge", Exception{ErrorZIPEntryNon64TooLarge}, "A ZIP Entry is too large for non zip64 zip-file"},
		{"ErrorAttachementTooLarge", Exception{ErrorAttachementTooLarge}, "An individual custom attachment is too large."},
		{"ErrorZIPCallback", Exception{ErrorZIPCallback}, "Error in libzip callback."},
		{"ErrorZIPContainsInconsistencies", Exception{ErrorZIPContainsInconsistencies}, "ZIP file contains inconsistencies. It might load with errors or incorrectly."},
		{"ErrorGenericException", Exception{ErrorGenericException}, "uncatched exception"},
		{"ErrorNoProgressInterval", Exception{ErrorNoProgressInterval}, "No Progress Interval has been specified in the progress handler"},
		{"ErrorDuplicateNode", Exception{ErrorDuplicateNode}, "An Edge with two identical nodes has been tried to added to a mesh"},
		{"ErrorTooManyNodes", Exception{ErrorTooManyNodes}, "The mesh exceeds more than MeshMAXEdgeCount (around two billion) nodes"},
		{"ErrorTooManyFaces", Exception{ErrorTooManyFaces}, "The mesh exceeds more than MeshMAXFaceCount (around two billion) faces"},
		{"ErrorInvalidNodeIndex", Exception{ErrorInvalidNodeIndex}, "The index provided for the node is invalid"},
		{"ErrorInvalidFaceIndex", Exception{ErrorInvalidFaceIndex}, "The index provided for the face is invalid"},
		{"ErrorInvalidMeshTopology", Exception{ErrorInvalidMeshTopology}, "The mesh topology structure is corrupt"},
		{"ErrorInvalidCoordinates", Exception{ErrorInvalidCoordinates}, "The coordinates exceed MeshMAXCoordinate (= 1 billion mm)"},
		{"ErrorNormalizedZeroVector", Exception{ErrorNormalizedZeroVector}, "A zero Vector has been tried to normalized, which is impossible"},
		{"ErrorCouldNotOpenFile", Exception{ErrorCouldNotOpenFile}, "The specified file could not be opened"},
		{"ErrorCouldNotCreateFile", Exception{ErrorCouldNotCreateFile}, "The specified file could not be created"},
		{"ErrorCouldNotSeekStream", Exception{ErrorCouldNotSeekStream}, "Seeking in a stream was not possible"},
		{"ErrorCouldNotReadStream", Exception{ErrorCouldNotReadStream}, "Reading from a stream was not possible"},
		{"ErrorCouldNotWriteStream", Exception{ErrorCouldNotWriteStream}, "Writing to a stream was not possible"},
		{"ErrorCouldNotReadFullData", Exception{ErrorCouldNotReadFullData}, "Reading from a stream was only possible partially"},
		{"ErrorCouldNotWriteFullData", Exception{ErrorCouldNotWriteFullData}, "Writing to a stream was only possible partially"},
		{"ErrorNoImportStream", Exception{ErrorNoImportStream}, "No Import Stream was provided to the importer"},
		{"ErrorInvalidFaceCount", Exception{ErrorInvalidFaceCount}, "The specified facecount in the file was not valid"},
		{"ErrorInvalidUnits", Exception{ErrorInvalidUnits}, "The specified units of the file was not valid"},
		{"ErrorCouldNotSetUnits", Exception{ErrorCouldNotSetUnits}, "The specified units could not be set (for example, the CVectorTree already had some entries)"},
		{"ErrorTooManyEdges", Exception{ErrorTooManyEdges}, "The mesh exceeds more than MeshMAXEdgeCount (around two billion) edges"},
		{"ErrorInvalidEdgeIndex", Exception{ErrorInvalidEdgeIndex}, "The index provided for the edge is invalid"},
		{"ErrorDuplicateEdge", Exception{ErrorDuplicateEdge}, "The mesh has an face with two identical edges"},
		{"ErrorManifoldEdges", Exception{ErrorManifoldEdges}, "Could not add face to an edge, because it was already two-manifold"},
		{"ErrorCouldNotDeleteEdge", Exception{ErrorCouldNotDeleteEdge}, "Could not delete edge, because it had attached faces"},
		{"ErrorInternalMergeError", Exception{ErrorInternalMergeError}, "Mesh Merging has failed, because the mesh structure was currupted"},
		{"ErrorEdgesAreNotFormingTriangle", Exception{ErrorEdgesAreNotFormingTriangle}, "The internal triangle structure is corrupted"},
		{"ErrorNoExportStream", Exception{ErrorNoExportStream}, "No Export Stream was provided to the exporter"},
		{"ErrorCouldNotSetParameter", Exception{ErrorCouldNotSetParameter}, "Could not set parameter, because the queue was not empty"},
		{"ErrorInvalidRECORDSize", Exception{ErrorInvalidRECORDSize}, "Mesh Information records size is invalid"},
		{"ErrorMeshInformationCountMismatch", Exception{ErrorMeshInformationCountMismatch}, "Mesh Information Face Count dies not match with mesh face count"},
		{"ErrorInvalidMeshInformationIndex", Exception{ErrorInvalidMeshInformationIndex}, "Could not access mesh information"},
		{"ErrorMeshInformationBufferFull", Exception{ErrorMeshInformationBufferFull}, "Mesh Information Backup could not be created"},
		{"ErrorNoMeshInformationContainer", Exception{ErrorNoMeshInformationContainer}, "No Mesh Information Container has been assigned"},
		{"ErrorDiscreteMergeError", Exception{ErrorDiscreteMergeError}, "Internal Mesh Merge Error because of corrupt mesh structure"},
		{"ErrorDiscreteEdgeLengthViolation", Exception{ErrorDiscreteEdgeLengthViolation}, "Discrete Edges may only have a max length of 30000."},
		{"ErrorOctreeOutOfBounds", Exception{ErrorOctreeOutOfBounds}, "OctTree Node is out of the OctTree Structure"},
		{"ErrorCouldNotDeleteNode", Exception{ErrorCouldNotDeleteNode}, "Could not delete mesh node, because it still had some edges connected to it"},
		{"ErrorInvalidInformationType", Exception{ErrorInvalidInformationType}, "Mesh Information has not been found"},
		{"ErrorFacesAreNotIdentical", Exception{ErrorFacesAreNotIdentical}, "Mesh Information could not be copied"},
		{"ErrorDuplicateTexture", Exception{ErrorDuplicateTexture}, "Texture is already existing"},
		{"ErrorDuplicateTextureID", Exception{ErrorDuplicateTextureID}, "Texture ID is already existing"},
		{"ErrorPartTooLarge", Exception{ErrorPartTooLarge}, "Part is too large"},
		{"ErrorDuplicateTexturePath", Exception{ErrorDuplicateTexturePath}, "Texture path is already existing"},
		{"ErrorDuplicateTextureWidth", Exception{ErrorDuplicateTextureWidth}, "Texture width is already existing"},
		{"ErrorDuplicateTextureHeight", Exception{ErrorDuplicateTextureHeight}, "Texture height is already existing"},
		{"ErrorDuplicateTextureDepth", Exception{ErrorDuplicateTextureDepth}, "Texture depth is already existing"},
		{"ErrorDuplicateTextureContentType", Exception{ErrorDuplicateTextureContentType}, "Texture content type is already existing"},
		{"ErrorDuplicateTextureU", Exception{ErrorDuplicateTextureU}, "Texture U coordinate is already existing"},
		{"ErrorDuplicateTextureV", Exception{ErrorDuplicateTextureV}, "Texture V coordinate is already existing"},
		{"ErrorDuplicateTextureW", Exception{ErrorDuplicateTextureW}, "Texture W coordinate is already existing"},
		{"ErrorDuplicateTextureSCALE", Exception{ErrorDuplicateTextureSCALE}, "Texture scale is already existing"},
		{"ErrorDuplicateTextureRotation", Exception{ErrorDuplicateTextureRotation}, "Texture rotation is already existing"},
		{"ErrorDuplicateTitlestyleU", Exception{ErrorDuplicateTitlestyleU}, "Texture tilestyle U is already existing"},
		{"ErrorDuplicateTitlestyleV", Exception{ErrorDuplicateTitlestyleV}, "Texture tilestyle V is already existing"},
		{"ErrorDuplicateTitlestyleW", Exception{ErrorDuplicateTitlestyleW}, "Texture tilestyle W is already existing"},
		{"ErrorDuplicateColorID", Exception{ErrorDuplicateColorID}, "Color ID is already existing"},
		{"ErrorInvalidMeshInformationData", Exception{ErrorInvalidMeshInformationData}, "Mesh Information Block was not assigned"},
		{"ErrorInvalidMeshInformation", Exception{ErrorInvalidMeshInformation}, "Mesh Information Object was not assigned"},
		{"ErrorTooManyBeams", Exception{ErrorTooManyBeams}, "The mesh exceeds more than MeshMAXBeamCount (around two billion) beams"},
		{"ErrorOPCReadFailed", Exception{ErrorOPCReadFailed}, "3MF Loading - OPC could not be loaded"},
		{"ErrorNoModelStream", Exception{ErrorNoModelStream}, "No model stream in OPC Container"},
		{"ErrorModelReadFailed", Exception{ErrorModelReadFailed}, "Model XML could not be parsed"},
		{"ErrorNo3MFObject", Exception{ErrorNo3MFObject}, "No 3MF Object in OPC Container"},
		{"ErrorCouldNotWriteModelStream", Exception{ErrorCouldNotWriteModelStream}, "Could not write Model Stream to OPC Container"},
		{"ErrorOPCFactoryCreateFailed", Exception{ErrorOPCFactoryCreateFailed}, "Could not create OPC Factory"},
		{"ErrorOPCPartSetReadFailed", Exception{ErrorOPCPartSetReadFailed}, "Could not read OPC Part Set"},
		{"ErrorOPCRelationshipSetReadFailed", Exception{ErrorOPCRelationshipSetReadFailed}, "Could not read OPC Relationship Set"},
		{"ErrorOPCRelationshipSourceURIFailed", Exception{ErrorOPCRelationshipSourceURIFailed}, "Could not get Relationship Source URI"},
		{"ErrorOPCRelationshipTargetURIFailed", Exception{ErrorOPCRelationshipTargetURIFailed}, "Could not get Relationship Target URI"},
		{"ErrorOPCRelationshipCombineURIFailed", Exception{ErrorOPCRelationshipCombineURIFailed}, "Could not Combine Relationship URIs"},
		{"ErrorOPCRelationshipGetPartFailed", Exception{ErrorOPCRelationshipGetPartFailed}, "Could not get Relationship Part"},
		{"ErrorOPCGetContentTypeFailed", Exception{ErrorOPCGetContentTypeFailed}, "Could not retrieve content type"},
		{"ErrorOPCContentTypeMismatch", Exception{ErrorOPCContentTypeMismatch}, "Content type mismatch"},
		{"ErrorOPCRelationshipEnumerationFailed", Exception{ErrorOPCRelationshipEnumerationFailed}, "Could not enumerate relationships"},
		{"ErrorOPCRelationshipNotFound", Exception{ErrorOPCRelationshipNotFound}, "Could not find relationship type"},
		{"ErrorOPCRelationshipNotUnique", Exception{ErrorOPCRelationshipNotUnique}, "Ambiguous relationship type"},
		{"ErrorOPCCouldNotGetModelStream", Exception{ErrorOPCCouldNotGetModelStream}, "Could not get OPC Model Stream"},
		{"ErrorCreateXMLReaderFailed", Exception{ErrorCreateXMLReaderFailed}, "Could not create XML Reader"},
		{"ErrorSetXMLReaderInputFailed", Exception{ErrorSetXMLReaderInputFailed}, "Could not set XML reader input"},
		{"ErrorCouldNotSeekModelStream", Exception{ErrorCouldNotSeekModelStream}, "Could not seek in XML Model Stream"},
		{"ErrorSetXMLPropertiesFailed", Exception{ErrorSetXMLPropertiesFailed}, "Could not set XML reader properties"},
		{"ErrorReadXMLNodeFailed", Exception{ErrorReadXMLNodeFailed}, "Could not read XML node"},
		{"ErrorCouldNotGetLocalXMLName", Exception{ErrorCouldNotGetLocalXMLName}, "Could not retrieve local xml node name"},
		{"ErrorCouldParseXMLContent", Exception{ErrorCouldParseXMLContent}, "Could not parse XML Node content"},
		{"ErrorCouldNotGetXMLText", Exception{ErrorCouldNotGetXMLText}, "Could not get XML Node value"},
		{"ErrorCouldNotGetXMLAttributes", Exception{ErrorCouldNotGetXMLAttributes}, "Could not retrieve XML Node attributes"},
		{"ErrorCouldNotGetXMLValue", Exception{ErrorCouldNotGetXMLValue}, "Could not get XML attribute value"},
		{"ErrorAlreadyParsedXMLNode", Exception{ErrorAlreadyParsedXMLNode}, "XML Node has already been parsed"},
		{"ErrorInvalidModelUnit", Exception{ErrorInvalidModelUnit}, "Invalid Model Unit"},
		{"ErrorInvalidModelObjectID", Exception{ErrorInvalidModelObjectID}, "Invalid Model Object ID"},
		{"ErrorMissingModelObjectID", Exception{ErrorMissingModelObjectID}, "No Model Object ID has been given"},
		{"ErrorDuplicateModelObject", Exception{ErrorDuplicateModelObject}, "Model Object is already existing"},
		{"ErrorDuplicateObjectID", Exception{ErrorDuplicateObjectID}, "Model Object ID was given twice"},
		{"ErrorAmbiguousObjectDefinition", Exception{ErrorAmbiguousObjectDefinition}, "Model Object Content was ambiguous"},
		{"ErrorModelCoordinateMissing", Exception{ErrorModelCoordinateMissing}, "Model Vertex is missing a coordinate"},
		{"ErrorInvalidModelCoordinates", Exception{ErrorInvalidModelCoordinates}, "Invalid Model Coordinates"},
		{"ErrorInvalidModelCoordinateIndices", Exception{ErrorInvalidModelCoordinateIndices}, "Invalid Model Coordinate Indices"},
		{"ErrorNodeNameIsEmpty", Exception{ErrorNodeNameIsEmpty}, "XML Node Name is empty"},
		{"ErrorInvalidModelNodeIndex", Exception{ErrorInvalidModelNodeIndex}, "Invalid model node index"},
		{"ErrorOPCPackageCreateFailed", Exception{ErrorOPCPackageCreateFailed}, "Could not create OPC Package"},
		{"ErrorCouldNotWriteOPCPackageToStream", Exception{ErrorCouldNotWriteOPCPackageToStream}, "Could not write OPC Package to Stream"},
		{"ErrorCouldNotCreateOPCPartURI", Exception{ErrorCouldNotCreateOPCPartURI}, "Could not create OPC Part URI"},
		{"ErrorCouldNotCreateOPCPart", Exception{ErrorCouldNotCreateOPCPart}, "Could not create OPC Part"},
		{"ErrorOPCCouldNotGetContentStream", Exception{ErrorOPCCouldNotGetContentStream}, "Could not get OPC Content Stream"},
		{"ErrorOPCCouldNotResizeStream", Exception{ErrorOPCCouldNotResizeStream}, "Could not resize OPC Stream"},
		{"ErrorOPCCouldNotSeekStream", Exception{ErrorOPCCouldNotSeekStream}, "Could not seek in OPC Stream"},
		{"ErrorOPCCouldNotCopyStream", Exception{ErrorOPCCouldNotCopyStream}, "Could not copy OPC Stream"},
		{"ErrorCouldNotRetrieveOPCPartName", Exception{ErrorCouldNotRetrieveOPCPartName}, "Could not retrieve OPC Part name"},
		{"ErrorCouldNotCreateOPCRelationship", Exception{ErrorCouldNotCreateOPCRelationship}, "Could not create OPC Relationship"},
		{"ErrorCouldNotCreateXMLWriter", Exception{ErrorCouldNotCreateXMLWriter}, "Could not create XML Writer"},
		{"ErrorCouldNotSetXMLOutput", Exception{ErrorCouldNotSetXMLOutput}, "Could not set XML Output stream"},
		{"ErrorCouldNotSetXMLProperty", Exception{ErrorCouldNotSetXMLProperty}, "Could not set XML Property"},
		{"ErrorCouldNotWriteXMLStartDocument", Exception{ErrorCouldNotWriteXMLStartDocument}, "Could not write XML Start Document"},
		{"ErrorCouldNotWriteXMLEndDocument", Exception{ErrorCouldNotWriteXMLEndDocument}, "Could not write XML End Document"},
		{"ErrorCouldNotFlushXMLWriter", Exception{ErrorCouldNotFlushXMLWriter}, "Could not flush XML Writer"},
		{"ErrorCouldNotWriteXMLStartElement", Exception{ErrorCouldNotWriteXMLStartElement}, "Could not write XML Start Element"},
		{"ErrorCouldNotWriteXMLEndElement", Exception{ErrorCouldNotWriteXMLEndElement}, "Could not write XML End Element"},
		{"ErrorCouldNotWriteXMLAttribute", Exception{ErrorCouldNotWriteXMLAttribute}, "Could not write XML Attribute String"},
		{"ErrorMissingBuildItemObjectID", Exception{ErrorMissingBuildItemObjectID}, "Build item Object ID was not specified"},
		{"ErrorDuplicateBuildItemObjectID", Exception{ErrorDuplicateBuildItemObjectID}, "Build item Object ID is ambiguous "},
		{"ErrorInvalidBuildItemObjectID", Exception{ErrorInvalidBuildItemObjectID}, "Build item Object ID is invalid"},
		{"ErrorCouldNotFindBuildItemObject", Exception{ErrorCouldNotFindBuildItemObject}, "Could not find Object associated to the Build item "},
		{"ErrorCouldNotFindComponentObject", Exception{ErrorCouldNotFindComponentObject}, "Could not find Object associated to Component"},
		{"ErrorDuplicateComponentObjectID", Exception{ErrorDuplicateComponentObjectID}, "Component Object ID is ambiguous "},
		{"ErrorMissingModelTextureID", Exception{ErrorMissingModelTextureID}, "Texture ID was not specified"},
		{"ErrorMissingObjectContent", Exception{ErrorMissingObjectContent}, "An object has no supported content type"},
		{"ErrorInvalidReaderObject", Exception{ErrorInvalidReaderObject}, "Invalid model reader object"},
		{"ErrorInvalidWriterObject", Exception{ErrorInvalidWriterObject}, "Invalid model writer object"},
		{"ErrorUnknownModelResource", Exception{ErrorUnknownModelResource}, "Unknown model resource"},
		{"ErrorInvalidStreamType", Exception{ErrorInvalidStreamType}, "Invalid stream type"},
		{"ErrorDuplicateMaterialID", Exception{ErrorDuplicateMaterialID}, "Duplicate Material ID"},
		{"ErrorDuplicateWallThickness", Exception{ErrorDuplicateWallThickness}, "Duplicate Wallthickness"},
		{"ErrorDuplicateFit", Exception{ErrorDuplicateFit}, "Duplicate Fit"},
		{"ErrorDuplicateObjectType", Exception{ErrorDuplicateObjectType}, "Duplicate Object Type"},
		{"ErrorModelTextureCoordinateMissing", Exception{ErrorModelTextureCoordinateMissing}, "Texture coordinates missing"},
		{"ErrorTooManyValuesInColorString", Exception{ErrorTooManyValuesInColorString}, "Too many values in color string"},
		{"ErrorInvalidValueInColorString", Exception{ErrorInvalidValueInColorString}, "Invalid value in color string"},
		{"ErrorDuplicateColorValue", Exception{ErrorDuplicateColorValue}, "Duplicate node color value"},
		{"ErrorMissingModelColorID", Exception{ErrorMissingModelColorID}, "Missing model color ID"},
		{"ErrorMissingModelMaterialID", Exception{ErrorMissingModelMaterialID}, "Missing model material ID"},
		{"ErrorInvalidBuildItem", Exception{ErrorInvalidBuildItem}, "No Build Item has been given"},
		{"ErrorInvalidObject", Exception{ErrorInvalidObject}, "No Object has been given"},
		{"ErrorInvalidModel", Exception{ErrorInvalidModel}, "No Model has been given"},
		{"ErrorInvalidModelResource", Exception{ErrorInvalidModelResource}, "No valid Model Resource has been given"},
		{"ErrorDuplicateMetadata", Exception{ErrorDuplicateMetadata}, "Duplicate Model Metadata"},
		{"ErrorInvalidMetadata", Exception{ErrorInvalidMetadata}, "Invalid Model Metadata"},
		{"ErrorInvalidModelComponent", Exception{ErrorInvalidModelComponent}, "Invalid Model Component"},
		{"ErrorInvalidModelObjectType", Exception{ErrorInvalidModelObjectType}, "Invalid Model Object Type"},
		{"ErrorMissingModelResourceID", Exception{ErrorMissingModelResourceID}, "Missing Model Resource ID"},
		{"ErrorDuplicateResourceID", Exception{ErrorDuplicateResourceID}, "Duplicate Resource ID"},
		{"ErrorCouldNotWriteXMLContent", Exception{ErrorCouldNotWriteXMLContent}, "Could not write XML Content"},
		{"ErrorCouldNotGetNamespace", Exception{ErrorCouldNotGetNamespace}, "Could not get XML Namespace"},
		{"ErrorHandleOverflow", Exception{ErrorHandleOverflow}, "Handle overflow"},
		{"ErrorNoResources", Exception{ErrorNoResources}, "No resources in model file"},
		{"ErrorNoBuild", Exception{ErrorNoBuild}, "No build section in model file"},
		{"ErrorDuplicateResources", Exception{ErrorDuplicateResources}, "Duplicate resources section in model file"},
		{"ErrorDuplicateBuildSection", Exception{ErrorDuplicateBuildSection}, "Duplicate build section in model file"},
		{"ErrorDuplicateModelNode", Exception{ErrorDuplicateModelNode}, "Duplicate model node in XML Stream"},
		{"ErrorNoModelNode", Exception{ErrorNoModelNode}, "No model node in XML Stream"},
		{"ErrorResourceNotFound", Exception{ErrorResourceNotFound}, "Resource not found"},
		{"ErrorUnknownReaderClass", Exception{ErrorUnknownReaderClass}, "Unknown reader class"},
		{"ErrorUnknownWriterClass", Exception{ErrorUnknownWriterClass}, "Unknown writer class"},
		{"ErrorModelTextureNotFound", Exception{ErrorModelTextureNotFound}, "Texture not found"},
		{"ErrorInvalidContentType", Exception{ErrorInvalidContentType}, "Invalid Content Type"},
		{"ErrorInvalidBASEMaterial", Exception{ErrorInvalidBASEMaterial}, "Invalid Base Material"},
		{"ErrorTooManyMaterialS", Exception{ErrorTooManyMaterialS}, "Too many materials"},
		{"ErrorInvalidTexture", Exception{ErrorInvalidTexture}, "Invalid texture"},
		{"ErrorCouldNotGetHandle", Exception{ErrorCouldNotGetHandle}, "Could not get handle"},
		{"ErrorBuildItemNotFound", Exception{ErrorBuildItemNotFound}, "Build item not found"},
		{"ErrorOPCCouldNotGetTextureURI", Exception{ErrorOPCCouldNotGetTextureURI}, "Could not get texture URI"},
		{"ErrorOPCCouldNotGetTextureStream", Exception{ErrorOPCCouldNotGetTextureStream}, "Could not get texture stream"},
		{"ErrorModelRelationshipSetReadFailed", Exception{ErrorModelRelationshipSetReadFailed}, "Model Relationship read failed"},
		{"ErrorNoTexturestream", Exception{ErrorNoTexturestream}, "Texture stream is not available"},
		{"ErrorCouldNotCreateStream", Exception{ErrorCouldNotCreateStream}, "Could not create stream"},
		{"ErrorNotSupportingLegacyCMYK", Exception{ErrorNotSupportingLegacyCMYK}, "Not supporting legacy CMYK color"},
		{"ErrorInvalidTextureReference", Exception{ErrorInvalidTextureReference}, "Invalid Texture Reference"},
		{"ErrorInvalidTextureID", Exception{ErrorInvalidTextureID}, "Invalid Texture ID"},
		{"ErrorNoModelToWrite", Exception{ErrorNoModelToWrite}, "No model to write"},
		{"ErrorOPCRelationshipGetTypeFailed", Exception{ErrorOPCRelationshipGetTypeFailed}, "Failed to get OPC Relationship type"},
		{"ErrorOPCCouldNotGetAttachementURI", Exception{ErrorOPCCouldNotGetAttachementURI}, "Could not get attachment URI"},
		{"ErrorDuplicateAttachementPath", Exception{ErrorDuplicateAttachementPath}, "Duplicate Attachment Path"},
		{"ErrorInvalidModelAttachement", Exception{ErrorInvalidModelAttachement}, "Invalid Model Attachment"},
		{"ErrorAttachementNotFound", Exception{ErrorAttachementNotFound}, "Could not find Model Attachment"},
		{"ErrorInvalidRequiredExtensionPrefix", Exception{ErrorInvalidRequiredExtensionPrefix}, "The prefix of a required extension is invalid"},
		{"ErrorRequiredExtensionNotSupported", Exception{ErrorRequiredExtensionNotSupported}, "A required extension is not supported"},
		{"ErrorBeamLatticeClippingResourceNotDefined", Exception{ErrorBeamLatticeClippingResourceNotDefined}, "The resource defined as clippingmesh has not yet been defined in the model"},
		{"ErrorBeamLatticeInvalidAttribute", Exception{ErrorBeamLatticeInvalidAttribute}, "An attribute of the beamlattice is invalid"},
		{"ErrorOPCCouldNotGetSlicerefURI", Exception{ErrorOPCCouldNotGetSlicerefURI}, "Could not get sliceref URI"},
		{"ErrorOPCCouldNotGetSlicerefStream", Exception{ErrorOPCCouldNotGetSlicerefStream}, "Could not get sliceref stream"},
		{"ErrorOPCCouldNotGetAttachementStream", Exception{ErrorOPCCouldNotGetAttachementStream}, "Could not get attachment stream"},
		{"ErrorDuplicateSliceStackID", Exception{ErrorDuplicateSliceStackID}, "Object has dublicate slicestack ID"},
		{"ErrorSliceStackResourceNotFound", Exception{ErrorSliceStackResourceNotFound}, "Could not find Slicestack Resource"},
		{"ErrorSliceStackSlicesAndSliceref", Exception{ErrorSliceStackSlicesAndSliceref}, "Slicestack contains slices and slicerefs"},
		{"ErrorIllformatUUID", Exception{ErrorIllformatUUID}, "A UUID is ill formatted"},
		{"ErrorInvalidSliceStack", Exception{ErrorInvalidSliceStack}, "A slice stack resource is invalid"},
		{"ErrorDuplicatePath", Exception{ErrorDuplicatePath}, "Duplicate path attribute"},
		{"ErrorDuplicateUUID", Exception{ErrorDuplicateUUID}, "Duplicate UUID attribute"},
		{"ErrorReferencesTooDeep", Exception{ErrorReferencesTooDeep}, "References in production extension go deeper than one level."},
		{"ErrorSlicerefsTooDeep", Exception{ErrorSlicerefsTooDeep}, "A slicestack referenced via a slicepath cannot reference another slicestack."},
		{"ErrorSlicesZNotIncreasing", Exception{ErrorSlicesZNotIncreasing}, "The z-coordinates of slices within a slicestack are not increasing."},
		{"ErrorSlicePolygonNotClose", Exception{ErrorSlicePolygonNotClose}, "A slice polygon of a model- or solidsupport-object is not closed."},
		{"ErrorCloseSlicePolygonIsLine", Exception{ErrorCloseSlicePolygonIsLine}, "A closed slice polygon is actually a line."},
		{"ErrorNamespaceInvalidElement", Exception{ErrorNamespaceInvalidElement}, "Invalid Element in namespace."},
		{"ErrorNamespaceInvalidAttribute", Exception{ErrorNamespaceInvalidAttribute}, "Invalid Attribute in namespace."},
		{"ErrorDuplicateZTop", Exception{ErrorDuplicateZTop}, "Duplicate Z-top-value in a slice."},
		{"ErrorMissingTEZTop", Exception{ErrorMissingTEZTop}, "Z-top-value is missing in a slice."},
		{"ErrorSliceInvalidAttribute", Exception{ErrorSliceInvalidAttribute}, "Invalid attribute in slice extension"},
		{"ErrorSliceTransformationPlanar", Exception{ErrorSliceTransformationPlanar}, "A slicestack posesses a nonplanar transformation."},
		{"ErrorUUIDNotUnique", Exception{ErrorUUIDNotUnique}, "A UUID is not unique within a package."},
		{"ErrorMetadataCouldNotGetNamespace", Exception{ErrorMetadataCouldNotGetNamespace}, "Could not get XML Namespace for a metadatum."},
		{"ErrorInvalidSliceSegmentVertexIndex", Exception{ErrorInvalidSliceSegmentVertexIndex}, "Invalid index for slice segment or polygon."},
		{"ErrorMissingUUID", Exception{ErrorMissingUUID}, "A UUID for a build, build item or object is missing."},
		{"ErrorInvalidSlicePath", Exception{ErrorInvalidSlicePath}, "A slicepath is invalid."},
		{"ErrorUnknownMetadata", Exception{ErrorUnknownMetadata}, "Unknown Model Metadata."},
		{"ErrorDuplicateMeshResolution", Exception{ErrorDuplicateMeshResolution}, "Object has duplicate meshresolution attribute."},
		{"ErrorInvalidMeshResolution", Exception{ErrorInvalidMeshResolution}, "Object has invalid value for meshresolution attribute."},
		{"ErrorInvalidReaderWarningsObject", Exception{ErrorInvalidReaderWarningsObject}, "Invalid model reader warnings object."},
		{"ErrorOPCCouldNotGetThumbnailStream", Exception{ErrorOPCCouldNotGetThumbnailStream}, "Could not get OPC thumbnail stream."},
		{"ErrorDuplicateObjectThumbnail", Exception{ErrorDuplicateObjectThumbnail}, "Duplicate object thumbnail."},
		{"ErrorDuplicateThumbnail", Exception{ErrorDuplicateThumbnail}, "Duplicate thumbnail."},
		{"ErrorDuplicatePID", Exception{ErrorDuplicatePID}, "Duplicate Property ID."},
		{"ErrorDuplicatePIndex", Exception{ErrorDuplicatePIndex}, "Duplicate Property Index."},
		{"ErrorMissingDefaultPID", Exception{ErrorMissingDefaultPID}, "A MeshObject with triangle-properties is missing a default property."},
		{"ErrorInvalidDefaultPID", Exception{ErrorInvalidDefaultPID}, "A MeshObject with triangle-properties has an invalid default property."},
		{"ErrorBuildItemObjectMustNotBeOther", Exception{ErrorBuildItemObjectMustNotBeOther}, "Build-item must not reference object of type Other."},
		{"ErrorDefaultPIDOnComponentsObject", Exception{ErrorDefaultPIDOnComponentsObject}, "A components object must not have a default PID."},
		{"ErrorBeamLatticeNodesTooClose", Exception{ErrorBeamLatticeNodesTooClose}, "Nodes used for a beam are closer then the specified minimal length."},
		{"ErrorBeamLatticeInvalidRepresentationResource", Exception{ErrorBeamLatticeInvalidRepresentationResource}, "The resource defined as representationmesh is invalid."},
		{"ErrorBeamLatticeInvalidObjectType", Exception{ErrorBeamLatticeInvalidObjectType}, "Beamlattice is defined on wrong object type."},
		{"ErrorSliceOneVertex", Exception{ErrorSliceOneVertex}, "Slice only contains one vertex."},
		{"ErrorSliceOnePoint", Exception{ErrorSliceOnePoint}, "Slice contains only one point within a polygon"},
		{"ErrorInvalidTitlestyle", Exception{ErrorInvalidTitlestyle}, "Invalid Tile Style"},
		{"ErrorInvalidFilter", Exception{ErrorInvalidFilter}, "Invalid Filter"},
		{"ErrorXMLParserInvalidAttribValue", Exception{ErrorXMLParserInvalidAttribValue}, "Invalid XML attribute value"},
		{"ErrorXMLParserInvalidParseResult", Exception{ErrorXMLParserInvalidParseResult}, "Invalid XML parse result"},
		{"ErrorXMLParserTooManyUsedChars", Exception{ErrorXMLParserTooManyUsedChars}, "Too many XML characters used"},
		{"ErrorXMLParserInvalidEndDelimiter", Exception{ErrorXMLParserInvalidEndDelimiter}, "Invalid XML end delimiter"},
		{"ErrorXMLParserInvalidNamespacePrefix", Exception{ErrorXMLParserInvalidNamespacePrefix}, "Invalid XML namespace prefix"},
		{"ErrorXMLParserCouldNotParseEntity", Exception{ErrorXMLParserCouldNotParseEntity}, "Could not parse XML entity"},
		{"ErrorXMLParserEmptyElementName", Exception{ErrorXMLParserEmptyElementName}, "Empty XML element name"},
		{"ErrorXMLParserInvalidCharacterInElementName", Exception{ErrorXMLParserInvalidCharacterInElementName}, "Invalid characters in XML element name"},
		{"ErrorXMLParserEmptyInstructionName", Exception{ErrorXMLParserEmptyInstructionName}, "Empty XML instruction name"},
		{"ErrorXMLParserInvalidInstructionName", Exception{ErrorXMLParserInvalidInstructionName}, "Invalid XML instruction name"},
		{"ErrorXMLParserCouldNotCloseInstruction", Exception{ErrorXMLParserCouldNotCloseInstruction}, "Could not close XML instruction"},
		{"ErrorXMLParserCouldNotEndElement", Exception{ErrorXMLParserCouldNotEndElement}, "Could not end XML element"},
		{"ErrorXMLParserEmptyEndElement", Exception{ErrorXMLParserEmptyEndElement}, "Empty XML end element"},
		{"ErrorXMLParserCouldNotCloseElement", Exception{ErrorXMLParserCouldNotCloseElement}, "Could not close XML element"},
		{"ErrorXMLParserInvalidAttributeName", Exception{ErrorXMLParserInvalidAttributeName}, "Invalid XML attribute name"},
		{"ErrorXMLParserSpaceInAttributeName", Exception{ErrorXMLParserSpaceInAttributeName}, "Space in XML attribute name"},
		{"ErrorXMLParserNoQuotesAroundAttribute", Exception{ErrorXMLParserNoQuotesAroundAttribute}, "No quotes around XML attribute"},
		{"ErrorDuplicateRelationship", Exception{ErrorDuplicateRelationship}, "A relationship is duplicated."},
		{"ErrorDuplicateContentType", Exception{ErrorDuplicateContentType}, "A content type is duplicated."},
		{"ErrorContentTypeEmptyExtension", Exception{ErrorContentTypeEmptyExtension}, "A content type does not have a valid extension."},
		{"ErrorContentTypeEmptyContentType", Exception{ErrorContentTypeEmptyContentType}, "A content type does not have a content type-value."},
		{"ErrorContentTypeEmptyPartName", Exception{ErrorContentTypeEmptyPartName}, "An override content type does not have a partname."},
		{"ErrorXMLParserInvalidEscapeString", Exception{ErrorXMLParserInvalidEscapeString}, "XML contains an invalid escape character."},
		{"ErrorCouldNotGetInterfaceVersion", Exception{ErrorCouldNotGetInterfaceVersion}, "Could not get interface version"},
		{"ErrorInvalidInterfaceVersion", Exception{ErrorInvalidInterfaceVersion}, "Invalid interface version"},
		{"ErrorInvalidStreamSize", Exception{ErrorInvalidStreamSize}, "Invalid stream size"},
		{"ErrorInvalidNameLength", Exception{ErrorInvalidNameLength}, "Invalid name length"},
		{"ErrorCouldNotCreateModel", Exception{ErrorCouldNotCreateModel}, "Could not create model"},
		{"ErrorInvalidTextureType", Exception{ErrorInvalidTextureType}, "Invalid Texture type"},
		{"Unkown", Exception{-1}, "unknown error"},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := tt.e.What(); got != tt.want {
				t.Errorf("Exception.What() = %v, want %v", got, tt.want)
			}
		})
	}
}
